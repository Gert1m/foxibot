from telebot.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton

from bot_token import token
from db import *
from time import time
from random import randint

bot = token


async def wait(message):
    user_id = message.from_user.id
    if ((int(get_from_db("boss", "attack_time", user_id)) - int(time())) // 60) % 1 == 1:
        name_time = "–º–∏–Ω—É—Ç—É"

    elif ((int(get_from_db("boss", "attack_time", user_id)) - int(time())) // 60) % 1 in range(2, 5):
        name_time = "–º–∏–Ω—É—Ç—ã"

    else:
        name_time = "–º–∏–Ω—É—Ç"

    if ((int(get_from_db("boss", "attack_time", user_id)) - int(time())) % 60) % 1 == 1:
        seconds = "—Å–µ–∫—É–Ω–¥—É"

    elif ((int(get_from_db("boss", "attack_time", user_id)) - int(time())) % 60) % 1 in range(2, 5):
        seconds = "—Å–µ–∫—É–Ω–¥—ã"

    else:
        seconds = "—Å–µ–∫—É–Ω–¥"

    bot.reply_to(message,
                 f"–ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ {(int(get_from_db("boss", "attack_time", user_id)) - int(time())) // 60} {name_time} {(int(get_from_db("boss", "attack_time", user_id)) - int(time())) % 60} {seconds}")


async def attack(message):
    user_id = message.from_user.id
    rebith = int(get_from_db("user", "rebith", user_id))
    lvlDamage = int(get_from_db("boss", "lvlDamage", user_id))
    lvlVision = int(get_from_db("boss", "lvlVision", user_id))
    lvlCrit = int(get_from_db("boss", "lvlCrit", user_id))
    isVip = int(get_from_db("user", "isVip", user_id))
    isPlaying = randint(1, int(10 + 2 * lvlVision) if isVip <= 0 else int((10 + 2 * lvlVision) * 1.5))
    combo = int(get_from_db("boss", "combo", user_id))
    combo_mp = int(combo / 3) if combo >= 3 else 1
    if int(get_from_db("boss", "damage", -1)) <= 0:
        username = get_from_db("user", "username", user_id)
        damage = int(get_from_db("boss", "damage", user_id))
        bot.reply_to(message,
                     f"{username}, –≤—ã —É–±–∏–ª–∏ –±–æ—Å—Å–∞!\n–ù–∞–Ω–µ—Å—ë–Ω–Ω—ã–π —É—Ä–æ–Ω: {damage}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –∞—Ç–∞–∫: {combo}")
        set_in_db("boss",
                  "reward",
                  f"{int((int(get_from_db("boss", "damage", user_id)) + int(get_from_db("boss", "reward", user_id))) * (1 + rebith / 10))}",
                  user_id)
        await boss_reward()

    elif isPlaying != 1:
        crit_hit = randint(1, 11 - lvlCrit)
        set_in_db("boss", "combo", f"{combo + 1}", user_id)
        set_in_db("boss", "damage",
                  f"{((1 + lvlDamage) * combo_mp if crit_hit != 1 else (2 + lvlDamage) * combo_mp) + int(get_from_db("boss", "damage", user_id))}",
                  user_id)
        set_in_db("boss", "damage",
                  f"{int(get_from_db("boss", "damage", -1)) - ((1 + lvlDamage) * combo_mp if crit_hit != 1 else (2 + lvlDamage) * combo_mp)}",
                  -1)
        await attack(message)

    else:
        username = get_from_db("user", "username", user_id)
        damage = int(get_from_db("boss", "damage", user_id))
        bot.reply_to(message,
                     f"{username}, –≤—ã –±–æ—Ä–æ–ª–∏—Å—å –∏–∑–æ –≤—Å–µ—Ö —Å–∏–ª, –Ω–æ —Å–µ–≥–æ–¥–Ω—è –∑–ª–æ –ø–æ–±–µ–¥–∏–ª–æ –¥–æ–±—Ä–æ. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –≤–æ–∑—å–º–∏—Ç–µ —Ä–µ–≤–∞–Ω—à —É –±–æ—Å—Å–∞!\n\n–ù–∞–Ω–µ—Å—ë–Ω–Ω—ã–π —É—Ä–æ–Ω: {damage}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –∞—Ç–∞–∫: {combo}")
        set_in_db("boss",
                  "reward",
                  f"{int((int(get_from_db("boss", "damage", user_id)) + int(get_from_db("boss", "reward", user_id))) * (1 + rebith / 10))}",
                  user_id)
        set_in_db("boss", "combo", f"{0}", user_id)
        set_in_db("boss", "damage", f"{0}", user_id)


async def boss_reward():
    player_list = get_all_from_db("boss", "", "id")
    for i in range(len(player_list)):
        if int(str(player_list[i])[1:-2]) > 0 and int(
                get_from_db("boss", "reward", int(str(player_list[i])[1:-2]))) > 0:
            user_id = int(str(player_list[i])[1:-2])
            try:
                bot.send_message(user_id, "–ë–æ—Å—Å –ø–æ–≤–µ—Ä–∂–µ–Ω! –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞–≥—Ä–∞–¥—É.")
            except:
                pass
            set_in_db("user", "balance",
                      f"{int(get_from_db("user", "balance", user_id)) + int(get_from_db("boss", "reward", user_id)) // 10}",
                      user_id)
            set_in_db("boss", "reward", f"{0}", user_id)
            set_in_db("boss", "combo", f"{0}", user_id)
            set_in_db("boss", "damage", f"{0}", user_id)
    count = int(str(get_all_from_db("boss", "COUNT", "(id)")[0])[1:-2])
    set_in_db("boss", "damage", f"{randint(4, 10) * 100 * count}", -1)


async def upgrade(message):
    user_id = message.from_user.id
    rebith = int(get_from_db("user", "rebith", user_id))

    lvlDamage = int(get_from_db("boss", "lvlDamage", user_id))
    lvlVision = int(get_from_db("boss", "lvlVision", user_id))
    lvlCrit = int(get_from_db("boss", "lvlCrit", user_id))

    set_in_db("boss", "costCrit", f"{int(120 * (1.5 ** lvlCrit)) * (1 + rebith / 4)}", user_id)
    set_in_db("boss", "costVision", f"{int(240 * (1.5 **    lvlVision)) * (1 + rebith / 4)}", user_id)
    set_in_db("boss", "costDamage", f"{int(90 * (1.5 ** lvlDamage)) * (1 + rebith / 4)}", user_id)

    costDamage = int(get_from_db("boss", "costDamage", user_id))
    costVision = int(get_from_db("boss", "costVision", user_id))
    costCrit = int(get_from_db("boss", "costCrit", user_id))

    buttons = InlineKeyboardMarkup()

    damage_button = InlineKeyboardButton("üî™" if lvlDamage < 10 else "‚úÖ",
                                         callback_data=("damage" if lvlDamage < 10 else " "))
    vision_button = InlineKeyboardButton("üõ°Ô∏è" if lvlVision < 5 else "‚úÖ",
                                         callback_data=("vision" if lvlVision < 5 else " "))
    crit_button = InlineKeyboardButton("üéØ" if lvlCrit < 10 else "‚úÖ",
                                       callback_data=("crit" if lvlCrit < 10 else " "))

    buttons.row(damage_button, vision_button, crit_button)
    text = (
               f"–£—Ä–æ–Ω {lvlDamage}/10 ") + (
               f"—Ü–µ–Ω–∞: {costDamage} {"–ª–∏—Å–æ–∫–æ–π–Ω" + get_name_coin(costDamage)}." if lvlDamage < 10 else "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ.") + (
               f"\n–°–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å {lvlVision}/5 ") + (
               f"—Ü–µ–Ω–∞: {costVision} {"–ª–∏—Å–æ–∫–æ–π–Ω" + get_name_coin(costVision)}" if lvlVision < 5 else "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ.") + (
               f"\n–¢–æ—á–Ω–æ—Å—Ç—å {lvlCrit}/10 ") + (
               f"—Ü–µ–Ω–∞: {costCrit} {"–ª–∏—Å–æ–∫–æ–π–Ω" + get_name_coin(costCrit)}." if lvlCrit < 10 else "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ."
           )
    bot.reply_to(message, text=text, reply_markup=buttons)


async def crit_up(message):
    user_id = message.from_user.id
    rebith = int(get_from_db("user", "rebith", user_id))
    lvlCrit = int(get_from_db("boss", "lvlCrit", user_id))
    costCrit = int(get_from_db("boss", "costCrit", user_id))
    balance = int(get_from_db("user", "balance", user_id))
    buttons = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("–î—Ä—É–≥–∏–µ —É–ª—É—á—à–µ–Ω–∏—è", callback_data="upgrade"))

    if balance > costCrit:
        set_in_db("user", "balance", f"{balance - int(120 * (1.5 ** (lvlCrit + 1))) * (1 + rebith / 4)}", user_id)
        set_in_db("boss", "costCrit", f"{int(120 * (1.5 ** (lvlCrit + 1))) * (1 + rebith / 4)}", user_id)
        set_in_db("boss", "lvlCrit", f"{lvlCrit + 1}", user_id)
        try:
            bot.edit_message_text(chat_id=message.message.chat.id, message_id=message.message.message_id, text="–£—Å–ø–µ—Ö!",
                                  reply_markup=buttons)
        except:
            bot.reply_to(message, "–£—Å–ø–µ—Ö!", reply_markup=buttons)
    else:
        try:
            bot.edit_message_text(chat_id=message.message.chat.id, message_id=message.message.message_id,
                                  text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏—Å–æ–∫–æ–π–Ω–æ–≤.", reply_markup=buttons)
        except:
            bot.reply_to(message, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏—Å–æ–∫–æ–π–Ω–æ–≤.", reply_markup=buttons)


async def vision_up(message):
    user_id = message.from_user.id
    rebith = int(get_from_db("user", "rebith", user_id))
    lvlVision = int(get_from_db("boss", "lvlVision", user_id))
    costVision = int(get_from_db("boss", "costVision", user_id))
    balance = int(get_from_db("user", "balance", user_id))
    buttons = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("–î—Ä—É–≥–∏–µ —É–ª—É—á—à–µ–Ω–∏—è", callback_data="upgrade"))

    if balance > costVision:
        set_in_db("user", "balance", f"{balance - int(240 * (1.5 ** (lvlVision + 1))) * (1 + rebith / 4)}", user_id)
        set_in_db("boss", "costVision", f"{int(240 * (1.5 ** (lvlVision + 1))) * (1 + rebith / 4)}", user_id)
        set_in_db("boss", "lvlVision", f"{lvlVision + 1}", user_id)
        try:
            bot.edit_message_text(chat_id=message.message.chat.id, message_id=message.message.message_id, text="–£—Å–ø–µ—Ö!",
                                  reply_markup=buttons)
        except:
            bot.reply_to(message, "–£—Å–ø–µ—Ö!", reply_markup=buttons)
    else:
        try:
            bot.edit_message_text(chat_id=message.message.chat.id, message_id=message.message.message_id,
                                  text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏—Å–æ–∫–æ–π–Ω–æ–≤.", reply_markup=buttons)
        except:
            bot.reply_to(message, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏—Å–æ–∫–æ–π–Ω–æ–≤.", reply_markup=buttons)


async def damage_up(message):
    user_id = message.from_user.id
    rebith = int(get_from_db("user", "rebith", user_id))
    balance = int(get_from_db("user", "balance", user_id))
    lvlDamage = int(get_from_db("boss", "lvlDamage", user_id))
    costDamage = int(get_from_db("boss", "costDamage", user_id))
    buttons = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("–î—Ä—É–≥–∏–µ —É–ª—É—á—à–µ–Ω–∏—è", callback_data="upgrade"))

    if balance > costDamage:
        set_in_db("user", "balance", f"{balance - int(90 * (1.5 ** (lvlDamage + 1))) * (1 + rebith / 4)}", user_id)
        set_in_db("boss", "costDamage", f"{int(90 * (1.5 ** (lvlDamage + 1))) * (1 + rebith / 4)}", user_id)
        set_in_db("boss", "lvlDamage", f"{lvlDamage + 1}", user_id)
        try:
            bot.edit_message_text(chat_id=message.message.chat.id, message_id=message.message.message_id, text="–£—Å–ø–µ—Ö!",
                                  reply_markup=buttons)
        except:
            bot.reply_to(message, "–£—Å–ø–µ—Ö!", reply_markup=buttons)
    else:
        try:
            bot.edit_message_text(chat_id=message.message.chat.id, message_id=message.message.message_id,
                                  text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏—Å–æ–∫–æ–π–Ω–æ–≤.", reply_markup=buttons)
        except:
            bot.reply_to(message, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏—Å–æ–∫–æ–π–Ω–æ–≤.", reply_markup=buttons)


async def rebith(message):
    buttons = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="rebith"))
    user_id = message.from_user.id
    lvlVision = int(get_from_db("boss", "lvlVision", user_id))
    lvlDamage = int(get_from_db("boss", "lvlDamage", user_id))
    lvlCrit = int(get_from_db("boss", "lvlCrit", user_id))
    rebith = int(get_from_db("user", "rebith", user_id))

    bot.reply_to(message, f"–í—ã —Å–¥–µ–ª–∞–ª–∏ {rebith} —Ä–µ–±–∏—Ç—Ö{get_name_coin(rebith)}")

    if lvlVision == 5 and lvlCrit == 10 and lvlDamage == 10:
        bot.reply_to(message,
                     f"–í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ä–µ–±–∏—Ç—Ö? –≠—Ç–æ —Å–±—Ä–æ—Å–∏—Ç –≤–µ—Å—å –≤–∞—à —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–æ –¥–∞—Å—Ç –Ω–µ–±–æ–ª—å—à–æ–π –±–æ–Ω—É—Å –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º.\n–¶–µ–Ω–∞ —Ä–µ–±–∏—Ç—Ö–∞ {450 + 450 * (1 + rebith / 10 * 3)}.",
                     reply_markap=buttons)
    else:
        bot.reply_to(message, f"–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ä–µ–±–∏—Ç—Ö –Ω–∞–¥–æ —Å–Ω–∞—á–∞–ª–∞ —É–ª—É—á—à–∏—Ç—å –≤—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã –≤ /upgrade –¥–æ –º–∞–∫—Å–∏–º—É–º–∞.")


async def do_rebith(message):
    user_id = message.from_user.id
    balance = int(get_from_db("user", "balance", user_id))
    rebith = int(get_from_db("user", "rebith", user_id))
    lvlVision = int(get_from_db("boss", "lvlVision", user_id))
    lvlDamage = int(get_from_db("boss", "lvlDamage", user_id))
    lvlCrit = int(get_from_db("boss", "lvlCrit", user_id))

    if lvlVision == 5 and lvlCrit == 10 and lvlDamage == 10:
        if balance >= (450 + 450 * (1 + rebith / 10 * 3)):
            set_in_db("user", "balance", f"{balance - (450 + 450 * (1 + rebith / 10 * 3))}", user_id)
            set_in_db("user", "rebith", f"{rebith + 1}", user_id)
            set_in_db("boss", "attack_time", f"{0}", user_id)
            set_in_db("boss", "lvlVision", f"{0}", user_id)
            set_in_db("boss", "lvlDamage", f"{0}", user_id)
            set_in_db("boss", "lvlCrit", f"{0}", user_id)
            set_in_db("user", "balance", f"{0}", user_id)
            try:
                bot.edit_message_text(chat_id=message.message.chat.id, message_id=message.message.message_id,
                                      text="–£—Å–ø–µ—Ö!.")
            except:
                bot.reply_to(message, "–£—Å–ø–µ—Ö!")
        else:
            try:
                bot.edit_message_text(chat_id=message.message.chat.id, message_id=message.message.message_id,
                                      text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏—Å–æ–∫–æ–π–Ω–æ–≤.")
            except:
                bot.reply_to(message, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏—Å–æ–∫–æ–π–Ω–æ–≤.")
    else:
        bot.reply_to(message, f"–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ä–µ–±–∏—Ç—Ö –Ω–∞–¥–æ —Å–Ω–∞—á–∞–ª–∞ —É–ª—É—á—à–∏—Ç—å –≤—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã –≤ /upgrade –¥–æ –º–∞–∫—Å–∏–º—É–º–∞.")


async def boss(message):
    boss_hp = int(get_from_db("boss", "damage", -1))
    bot.reply_to(message, f"–¢–µ–∫—É—â–µ–µ —Ö–ø –±–æ—Å—Å–∞: {boss_hp}")


async def reward(message):
    buttons = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("–ó–∞–±—Ä–∞—Ç—å –¥–æ—Å—Ä–æ—á–Ω–æ", callback_data="claim_reward"))
    user_id = message.from_user.id
    reward = int(get_from_db("boss", "reward", user_id))
    if reward > 0:
        bot.reply_to(message,
                     f"–ü–æ—Å–ª–µ –ø–æ–±–µ–¥—ã –Ω–∞–¥ –±–æ—Å—Å–æ–º –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {reward // 10} {"–ª–∏—Å–æ–∫–æ–π–Ω" + get_name_coin(reward // 10)}",
                     reply_markup=buttons)
    else:
        bot.reply_to(message,
                     f"–ü–æ—Å–ª–µ –ø–æ–±–µ–¥—ã –Ω–∞–¥ –±–æ—Å—Å–æ–º –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {reward // 10} {"–ª–∏—Å–æ–∫–æ–π–Ω" + get_name_coin(reward // 10)}", )
